name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 1001:5432  # Убедитесь, что используется правильный порт
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}  # Пароль из GitHub Secrets
          POSTGRES_DB: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'nik'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle

    - name: Build with Gradle
      run: ./gradlew clean build

    - name: Run tests
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres  # Имя сервиса вместо localhost
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}  # Используем пароль из Secrets
      run: ./gradlew test

    - name: Static code analysis (Checkstyle)
      run: ./gradlew check

    - name: Build JAR file
      run: ./gradlew bootJar

    - name: Upload JAR as artifact
      uses: actions/upload-artifact@v3
      with:
        name: socks-service-jar
        path: build/libs/*.jar

    - name: Deploy to server
      if: success()
      run: |
        echo "Deploying JAR file to server"
        scp -i ${{ secrets.SSH_PRIVATE_KEY }} build/libs/*.jar user@your-server:/path/to/deploy/directory
        ssh -i ${{ secrets.SSH_PRIVATE_KEY }} user@your-server "java -jar /path/to/deploy/directory/socks-backspark.jar"
