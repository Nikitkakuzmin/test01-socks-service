jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}  # Пароль из секретов
          POSTGRES_DB: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle

    - name: Make gradlew executable
      run: chmod +x ./gradlew  # Устанавливаем права на выполнение для gradlew

    - name: Build with Gradle
      run: ./gradlew clean build  # Строим проект с помощью gradlew

    - name: Run tests
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/postgres  # Подключение к базе
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        SERVER_PORT: 8888
        SPRING_APPLICATION_NAME: socks-backspark
        SPRING_JPA_HIBERNATE_DDL_AUTO: update
        SPRING_JPA_SHOW_SQL: true
      run: ./gradlew test  # Запуск тестов

    - name: Static code analysis (Checkstyle)
      run: ./gradlew check  # Статический анализ

    - name: Build JAR file
      run: ./gradlew bootJar  # Сборка JAR

    - name: Upload JAR as artifact
      uses: actions/upload-artifact@v3
      with:
        name: socks-service-jar
        path: build/libs/*.jar  # Загрузка JAR файла как артефакт

    - name: Deploy to server
      if: success()
      run: |
        echo "Deploying JAR file to server"
        scp -i ${{ secrets.SSH_PRIVATE_KEY }} build/libs/*.jar user@your-server:/path/to/deploy/directory
        ssh -i ${{ secrets.SSH_PRIVATE_KEY }} user@your-server "java -jar /path/to/deploy/directory/socks-backspark.jar"  # Деплой на сервер

